plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = "${project.mod_version}"
group = "${project.maven_group}"

base {
	archivesName = "${project.archives_base_name}"
}

repositories {
	maven { url = 'https://maven.fabricmc.net/' }
	maven { url = 'https://masa.dy.fi/mcmods/maven/' }
	maven { url = 'https://api.modrinth.com/maven/' }

	maven { url = 'https://jitpack.io' }
	maven { url = 'https://repo1.maven.org/maven2/' }
	// Add repositories if needed
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "org.luaj:luaj-jse:3.0.1"
	modImplementation "com.neovisionaries:nv-websocket-client:2.14"

	modImplementation files('libs/litematica-fabric-1.20.1-0.15.4.jar')
	modImplementation files('libs/malilib-fabric-1.20.1-0.16.3.jar')
	modImplementation files('libs/[1.20.1][Fabric] RPG-HUD-3.10.jar')
	modImplementation files('libs/simplyswords-fabric-1.56.0-1.20.1.jar')
	modImplementation files('libs/architectury-9.2.14-fabric.jar')
	modImplementation files('libs/cloth-config-11.1.136-fabric.jar')
	modImplementation files('libs/runemodels-1.0.1.jar')
	modImplementation files('libs/geckolib-fabric-1.20.1-4.7.1.2.jar')
	//modImplementation files('libs/')
}

processResources {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE

	eachFile { details ->
		println "Копируется: ${details.path}"
	}
}



tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename("LICENSE", "LICENSE_${project.base.archivesName}")
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}
	repositories {
		// Add publishing repos if needed
	}
}

sourceSets {
	main {
		resources {
			srcDirs 'src/main/resources'
		}
	}
}

tasks.named('sourcesJar') {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task copyAssets(type: Copy) {
	from 'src/main/resources/assets/axorunelostworlds'
	into "${buildDir}/resources/main/assets/axorunelostworlds"
	include '**/*.bbmodel', '**/*.png', '**/*.json'
	exclude '**/axorunelostworlds.mixins.json' // Исключаем mixins.json
	eachFile { details ->
		println "Копируется: ${details.path}"
	}
}

processResources.dependsOn copyAssets
runClient.dependsOn processResources